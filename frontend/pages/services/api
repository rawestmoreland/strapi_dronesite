import delve from 'dlv'
import { getStrapiURL } from '../../utils'

// Helper to make GET requests to Strapi
export async function fetchAPI(path, options = {}) {
	const defaultOptions = {
		headers: {
			'Content-Type': 'application/json',
		},
	}
	const mergedOptions = {
		...defaultOptions,
		...options,
	}
	const requestUrl = getStrapiURL(path)
	const response = await fetch(requestUrl, mergedOptions)

	if (!response.ok) {
		console.error(response.statusText)
		throw new Error(`An error occured please try again`)
	}
	const data = await response.json()
	return data
}

// This function can merge required data but it is not used here.
export async function checkRequiredData(block) {
	return block
}

// This function will get the data dependencies for every block.
export async function getDataDependencies(json) {
	let blocks = delve(json, 'blocks', [])
	blocks = await Promise.all(blocks.map(checkRequiredData))
	return {
		...json,
		blocks,
	}
}

// Get the global data for the site
export async function getGlobalData(locale) {
	const globalPath = `/global?_locale=${locale}`
	const globalData = await fetchAPI(globalPath)
	return globalData
}
